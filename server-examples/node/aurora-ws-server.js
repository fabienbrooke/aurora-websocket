// Generated by CoffeeScript 1.6.3
(function() {
  var WebSocketServer, audioFolder, fs, path, wss;

  fs = require('fs');

  path = require('path');

  WebSocketServer = require('ws').Server;

  wss = new WebSocketServer({
    port: 8080
  });

  audioFolder = './';

  wss.on('connection', function(ws) {
    var audioPath, audioStream, createFileStream;
    audioStream = null;
    audioPath = '';
    ws.on('close', function() {
      return audioStream != null ? audioStream.removeAllListeners() : void 0;
    });
    ws.on('message', function(msg) {
      msg = JSON.parse(msg);
      if (msg.fileName != null) {
        audioPath = path.join(audioFolder, msg.fileName);
        fs.stat(audioPath, function(err, stats) {
          if (err) {
            return ws.send(JSON.stringify({
              error: 'Could not retrieve file.'
            }));
          } else {
            ws.send(JSON.stringify({
              fileSize: stats.size
            }));
            return createFileStream();
          }
        });
      } else if (msg.resume) {
        if (audioStream != null) {
          audioStream.resume();
        }
      } else if (msg.pause) {
        if (audioStream != null) {
          audioStream.pause();
        }
      } else if (msg.reset) {
        if (audioStream != null) {
          audioStream.removeAllListeners();
        }
        createFileStream();
      }
    });
    return createFileStream = function() {
      audioStream = fs.createReadStream(audioPath);
      audioStream.pause();
      audioStream.on('data', function(data) {
        return ws.send(data, {
          binary: true
        });
      });
      return audioStream.on('end', function() {
        return ws.send(JSON.stringify({
          end: true
        }));
      });
    };
  });

  return;

}).call(this);

/*
//@ sourceMappingURL=aurora-ws-server.map
*/
